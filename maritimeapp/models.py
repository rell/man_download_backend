from django.db import models
from django.contrib.gis.db import models as gis_models
from django.contrib.gis.geos import Point


# Create your models here.
class Site(models.Model):
    name = models.CharField(max_length=255, primary_key=True)
    description = models.TextField()


class SiteMeasurementsAllPoints10(models.Model):
    site = models.ForeignKey(Site, on_delete=models.CASCADE)
    date = models.DateField()
    time = models.TimeField()
    air_mass = models.FloatField()
    latlng = gis_models.PointField(default=Point(0, 0))
    aod_340nm = models.FloatField()
    aod_380nm = models.FloatField()
    aod_440nm = models.FloatField()
    aod_500nm = models.FloatField()
    aod_675nm = models.FloatField()
    aod_870nm = models.FloatField()
    aod_1020nm = models.FloatField()
    aod_1640nm = models.FloatField()
    water_vapor = models.FloatField()
    angstrom_exponent = models.FloatField()
    last_processing_date = models.DateField()
    aeronet_number = models.IntegerField()
    microtops_number = models.IntegerField()


class SiteMeasurementsAllPoints15(models.Model):
    site = models.ForeignKey(Site, on_delete=models.CASCADE)
    date = models.DateField()
    time = models.TimeField()
    air_mass = models.FloatField()
    latlng = gis_models.PointField(default=Point(0, 0))
    aod_340nm = models.FloatField()
    aod_380nm = models.FloatField()
    aod_440nm = models.FloatField()
    aod_500nm = models.FloatField()
    aod_675nm = models.FloatField()
    aod_870nm = models.FloatField()
    aod_1020nm = models.FloatField()
    aod_1640nm = models.FloatField()
    water_vapor = models.FloatField()
    angstrom_exponent = models.FloatField()
    last_processing_date = models.DateField()
    aeronet_number = models.IntegerField()
    microtops_number = models.IntegerField()


class SiteMeasurementsAllPoints20(models.Model):
    site = models.ForeignKey(Site, on_delete=models.CASCADE)
    date = models.DateField()
    time = models.TimeField()
    air_mass = models.FloatField()
    latlng = gis_models.PointField(default=Point(0, 0))
    aod_340nm = models.FloatField()
    aod_380nm = models.FloatField()
    aod_440nm = models.FloatField()
    aod_500nm = models.FloatField()
    aod_675nm = models.FloatField()
    aod_870nm = models.FloatField()
    aod_1020nm = models.FloatField()
    aod_1640nm = models.FloatField()
    water_vapor = models.FloatField()
    angstrom_exponent = models.FloatField()
    last_processing_date = models.DateField()
    aeronet_number = models.IntegerField()
    microtops_number = models.IntegerField()


class SiteMeasurementsDaily15(models.Model):
    site = models.ForeignKey(Site, on_delete=models.CASCADE)
    date = models.DateField()
    time = models.TimeField()
    air_mass = models.FloatField()
    latlng = gis_models.PointField(default=Point(0, 0))
    # latitude = models.FloatField()
    # longitude = models.FloatField()
    aod_340nm = models.FloatField()
    aod_380nm = models.FloatField()
    aod_440nm = models.FloatField()
    aod_500nm = models.FloatField()
    aod_675nm = models.FloatField()
    aod_870nm = models.FloatField()
    aod_1020nm = models.FloatField()
    aod_1640nm = models.FloatField()
    water_vapor = models.FloatField()
    angstrom_exponent = models.FloatField()
    std_340nm = models.FloatField()
    std_380nm = models.FloatField()
    std_440nm = models.FloatField()
    std_500nm = models.FloatField()
    std_675nm = models.FloatField()
    std_870nm = models.FloatField()
    std_1020nm = models.FloatField()
    std_1640nm = models.FloatField()
    std_water_vapor = models.FloatField()
    std_angstrom_exponent = models.FloatField()
    num_observations = models.IntegerField()
    last_processing_date = models.DateField()
    aeronet_number = models.IntegerField()
    microtops_number = models.IntegerField()


class SiteMeasurementsDaily20(models.Model):
    site = models.ForeignKey(Site, on_delete=models.CASCADE)
    date = models.DateField()
    time = models.TimeField()
    air_mass = models.FloatField()
    latlng = gis_models.PointField(default=Point(0, 0))
    # latitude = models.FloatField()
    # longitude = models.FloatField()
    aod_340nm = models.FloatField()
    aod_380nm = models.FloatField()
    aod_440nm = models.FloatField()
    aod_500nm = models.FloatField()
    aod_675nm = models.FloatField()
    aod_870nm = models.FloatField()
    aod_1020nm = models.FloatField()
    aod_1640nm = models.FloatField()
    water_vapor = models.FloatField()
    angstrom_exponent = models.FloatField()
    std_340nm = models.FloatField()
    std_380nm = models.FloatField()
    std_440nm = models.FloatField()
    std_500nm = models.FloatField()
    std_675nm = models.FloatField()
    std_870nm = models.FloatField()
    std_1020nm = models.FloatField()
    std_1640nm = models.FloatField()
    std_water_vapor = models.FloatField()
    std_angstrom_exponent = models.FloatField()
    num_observations = models.IntegerField()
    last_processing_date = models.DateField()
    aeronet_number = models.IntegerField()
    microtops_number = models.IntegerField()


class SiteMeasurementsSeries20(models.Model):
    site = models.ForeignKey(Site, on_delete=models.CASCADE)
    date = models.DateField()
    time = models.TimeField()
    air_mass = models.FloatField()
    latlng = gis_models.PointField(default=Point(0, 0))
    aod_340nm = models.FloatField()
    aod_380nm = models.FloatField()
    aod_440nm = models.FloatField()
    aod_500nm = models.FloatField()
    aod_675nm = models.FloatField()
    aod_870nm = models.FloatField()
    aod_1020nm = models.FloatField()
    aod_1640nm = models.FloatField()
    water_vapor = models.FloatField()
    angstrom_exponent_440_870 = models.FloatField()
    std_340nm = models.FloatField()
    std_380nm = models.FloatField()
    std_440nm = models.FloatField()
    std_500nm = models.FloatField()
    std_675nm = models.FloatField()
    std_870nm = models.FloatField()
    std_1020nm = models.FloatField()
    std_1640nm = models.FloatField()
    std_water_vapor = models.FloatField()
    std_angstrom_exponent_440_870 = models.FloatField()
    num_observations = models.IntegerField()
    last_processing_date = models.DateField()
    aeronet_number = models.IntegerField()
    microtops_number = models.IntegerField()


class SiteMeasurementsSeries15(models.Model):
    site = models.ForeignKey(Site, on_delete=models.CASCADE)
    date = models.DateField()
    time = models.TimeField()
    air_mass = models.FloatField()
    latlng = gis_models.PointField(default=Point(0, 0))
    aod_340nm = models.FloatField()
    aod_380nm = models.FloatField()
    aod_440nm = models.FloatField()
    aod_500nm = models.FloatField()
    aod_675nm = models.FloatField()
    aod_870nm = models.FloatField()
    aod_1020nm = models.FloatField()
    aod_1640nm = models.FloatField()
    water_vapor = models.FloatField()
    angstrom_exponent_440_870 = models.FloatField()
    std_340nm = models.FloatField()
    std_380nm = models.FloatField()
    std_440nm = models.FloatField()
    std_500nm = models.FloatField()
    std_675nm = models.FloatField()
    std_870nm = models.FloatField()
    std_1020nm = models.FloatField()
    std_1640nm = models.FloatField()
    std_water_vapor = models.FloatField()
    std_angstrom_exponent_440_870 = models.FloatField()
    num_observations = models.IntegerField()
    last_processing_date = models.DateField()
    aeronet_number = models.IntegerField()
    microtops_number = models.IntegerField()